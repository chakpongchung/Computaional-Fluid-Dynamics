#include <iostream>
#include <math.h>

#include "ivps.h"

using namespace std;

void f ( double t, double *x, double *xp ) { 
       xp[0] = 5.0*x[0] + 5.0*x[1] + 2.0*x[2];
       xp[1] = -6.0*x[0] - 6.0*x[1] - 5.0*x[2];
       xp[2] = 6.0*x[0] + 6.0*x[1] + 5.0*x[2];
} 

int main ()

{
     double exactx, exacty, exactz, t0, x0[3], h, work[9];
     int n, j, ts, call_num;
     
     exactx = -2.0 + 2.0*exp(2.0)*cos(3.0);
	 //2*cos(3*t)*exp(2*t) - 2
     exacty = 2.0 - 2.0*exp(2.0)*cos(3.0) - 2.0*exp(2.0)*sin(3.0);
	 //2 - 2*sin(3*t)*exp(2*t) - 2*cos(3*t)*exp(2*t)
     exactz = 2.0*exp(2.0)*cos(3.0) + 2.0*exp(2.0)*sin(3.0);
     //2*cos(3*t)*exp(2*t) + 2*sin(3*t)*exp(2*t)
     
     n = 2;
     for ( j = 0; j < 10; j++ ) {
         x0[0] = 0.0;  x0[1] = 0.0;  x0[2] = 2.0;
         t0 = 0.0;
         h = 1.0 / ( (double) n );
         call_num = 1;
         for ( ts = 1; ts <= n; ts++ ) {
             ab2 ( 3, t0, x0, h, &call_num, work, f );
             t0 += h;
         }
         cout << x0[0] << "\t" << fabs(x0[0]-exactx) << "\t"
              << x0[1] << "\t" << fabs(x0[1]-exacty) << "\t"
              << x0[2] << "\t" << fabs(x0[2]-exactz) << endl;
         n *= 2;
     }
     
}

/*
-18.5084	1.87823	        17.2806	2.73585	        -15.2806	2.73585
-16.7475	0.117297	15.0437	0.498935	-13.0437	0.498935
-16.6053	0.0249008	14.5463	0.00161426	-12.5463	0.00161426
-16.6282	0.00200522	14.5424	0.00233374	-12.5424	0.00233374
-16.6301	8.62272e-05	14.5445	0.000204498	-12.5445	0.000204498
-16.6302	2.82068e-06	14.5447	1.35762e-05	-12.5447	1.35762e-05
-16.6302	7.07955e-08	14.5447	8.49266e-07	-12.5447	8.49266e-07
-16.6302	7.01828e-10	14.5447	5.26572e-08	-12.5447	5.26572e-08
-16.6302	7.93534e-11	14.5447	3.27035e-09	-12.5447	3.27035e-09
-16.6302	8.94218e-12	14.5447	2.03636e-10	-12.5447	2.03643e-10
*/